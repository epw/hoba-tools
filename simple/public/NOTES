For this one, I'm trying not to do as much that's fancy.

Only one page can deal with logging in: index.html (probably)

There's no Apache-level configuration, just a Python function that can check a cookie with a user ID and a token. The function either returns the user data, or redirects to the login page.

This means that being logged in actually means having an up-to-date token cookie, and only CGI-enabled pages can be gated behind a login.

The login page itself handles creating keypairs, requesting a new user from the server, and negotiates a token cookie with the server.



The client doesn't know how to re-authenticate a token, all it can do is present a token, or ask the server to generate a new one and send it along. This does mean a bad guy could interrupt a user by sending a "new token" request with their user ID, which could allow a DoS, so at some point this will have to require some kind of proof, itself.
